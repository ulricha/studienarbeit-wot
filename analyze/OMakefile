########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
# The standard OMakefile.
# You will usually need to modify this file for your project.

########################################################################
# Phony targets are scoped, so you probably want to declare them first.
#

# .PHONY: all install clean

########################################################################
# Subdirectories.
# You may want to include some subdirectories in this project.
# If so, define the subdirectory targets and uncomment this section.
#

# .SUBDIRS:

########################################################################
# OCaml configuration.
# Delete this section if you are not building OCaml files.
#

################################################
# Configuration.  You may want to modify any of these configuration
# variables.
#

#
# This project requires ocamlfind (default - false).
#
USE_OCAMLFIND = true
#
OCAMLPACKS[] =
	ocamlgraph
	batteries
	bin_prot
	sexplib
	sexplib.syntax
	pgocaml
	pgocaml.syntax
	threads
	ocamlmpi

if $(not $(OCAMLFIND_EXISTS))
   eprintln(This project requires ocamlfind, but is was not found.)
   eprintln(You need to install ocamlfind and run "omake --configure".)
   exit 1

OCAMLFINDFLAGS = -syntax camlp4o 

#
# Include path
#
# OCAMLINCLUDES +=

#
# Compile native or byte code? 
#
# The default values are defined as follows:
#
NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = $(not $(OCAMLOPT_EXISTS))

#
# Various options
#
# OCAMLFLAGS    +=
# OCAMLCFLAGS   +=
OCAMLOPTFLAGS += -thread
# OCAML_LINK_FLAGS +=
# OCAML_BYTE_LINK_FLAGS +=
# OCAML_NATIVE_LINK_FLAGS +=

################################################
# Generated files
#
# Workaround for the fact that ocamldep does not pay attention to .mll
# and .mly files.
#
# OCamlGeneratedFiles(parser.ml lexer.ml)

################################################
# Build an OCaml program
#

AUXFILES[] =
	db_interface
	ekey
	export_helpers
	graph_misc
	wot_graph
	misc
	packet
	wotsap_parser
	betweeness
	clustering_coefficient
	community_helpers
	component_helpers
	domain_time_statistics
	network_statistics
	simple_stats
	metagraph


PROGRAM = dump_sql
# OCAML_LIBS +=
# OCAML_CLIBS +=
# OCAML_OTHER_LIBS +=
# OCAML_LIB_FLAGS +=
#
OCamlProgram(dump_sql, dump_sql $(AUXFILES))
OCamlProgram(db_scc_information, db_scc_information $(AUXFILES))
OCamlProgram(graph_snapshot, graph_snapshot $(AUXFILES))
OCamlProgram(community_structure, community_structure $(AUXFILES))
OCamlProgram(component_structure, component_structure $(AUXFILES))
OCamlProgram(investigate_communities, investigate_communities $(AUXFILES))
OCamlProgram(investigate_component, investigate_component $(AUXFILES))
OCamlProgram(basic_properties, basic_properties $(AUXFILES))
OCamlProgram(betweeness_ser, betweeness_ser $(AUXFILES))
OCamlProgram(clustering_coefficient_ser, clustering_coefficient_ser $(AUXFILES))
OCamlProgram(export, export $(AUXFILES))
OCamlProgram(mscc_size, mscc_size $(AUXFILES))
OCamlProgram(simple_stats, simple_stats $(AUXFILES))
OCamlProgram(time, time $(AUXFILES))
OCamlProgram(count, count $(AUXFILES))
OCamlProgram(basic_properties_mpi, basic_properties_mpi $(AUXFILES) mpi_framework)
OCamlProgram(basic_properties, basic_properties $(AUXFILES))
OCamlProgram(correlate_weak_sigs, correlate_weak_sigs $(AUXFILES))
OCamlProgram(without, without $(AUXFILES))
OCamlProgram(correlate_deg, correlate_deg $(AUXFILES))

EXE[] = 
	dump_sql
	db_scc_information
	graph_snapshot
	community_structure
	component_structure
	investigate_component
	investigate_communities
	basic_properties
	betweeness_ser
	clustering_coefficient_ser
	export
	mscc_size
	simple_stats
	time
	count
	basic_properties_mpi
	without
	correlate_weak_sigs
	correlate_deg

.DEFAULT: $(EXE)

.PHONY: clean
clean:
  rm -f *.cmx *.cmi *.o *.opt
